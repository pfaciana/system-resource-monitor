"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2808],{1987:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>a,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/memory","title":"Memory","description":"Functions for monitoring system memory usage.","source":"@site/docs/api/memory.md","sourceDirName":"api","slug":"/api/memory","permalink":"/system-resource-monitor/docs/api/memory","draft":false,"unlisted":false,"editUrl":"https://github.com/pfaciana/system-resource-monitor/tree/master/docs/docs/api/memory.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Memory"},"sidebar":"tutorialSidebar","previous":{"title":"CPU Usage","permalink":"/system-resource-monitor/docs/api/cpu-usage"},"next":{"title":"Thread Management","permalink":"/system-resource-monitor/docs/api/thread-management"}}');var o=r(5105),i=r(3331);const l={sidebar_position:3,sidebar_label:"Memory"},t="Memory",c={},d=[{value:"Memory Information",id:"memory-information",level:2},{value:"<code>getTotalMemory()</code>",id:"gettotalmemory",level:3},{value:"<code>getUsedMemory()</code>",id:"getusedmemory",level:3},{value:"Memory Usage",id:"memory-usage",level:2},{value:"<code>getMemoryUsage()</code>",id:"getmemoryusage",level:3},{value:"Memory Thresholds",id:"memory-thresholds",level:2},{value:"<code>isMemoryAbove()</code>",id:"ismemoryabove",level:3},{value:"<code>isMemoryBelow()</code>",id:"ismemorybelow",level:3}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"memory",children:"Memory"})}),"\n",(0,o.jsx)(n.p,{children:"Functions for monitoring system memory usage."}),"\n",(0,o.jsx)(n.h2,{id:"memory-information",children:"Memory Information"}),"\n",(0,o.jsx)(n.h3,{id:"gettotalmemory",children:(0,o.jsx)(n.code,{children:"getTotalMemory()"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the total system memory."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function getTotalMemory(\n  inGB?: boolean,\n  precision?: number\n): number\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"inGB"})," (optional) - If true, returns value in GB. If false, returns in bytes. Default: ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"precision"})," (optional) - Number of decimal places when returning GB. Default: ",(0,o.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"number"})," - Total memory in GB or bytes"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import { getTotalMemory } from 'system-resource-monitor';\n\n// Get total memory in GB\nconsole.log(`Total Memory: ${getTotalMemory(true)}GB`);\n\n// Get total memory in bytes\nconsole.log(`Total Memory: ${getTotalMemory()} bytes`);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"getusedmemory",children:(0,o.jsx)(n.code,{children:"getUsedMemory()"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the amount of used system memory."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function getUsedMemory(\n  inGB?: boolean,\n  precision?: number\n): number\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"inGB"})," (optional) - If true, returns value in GB. If false, returns in bytes. Default: ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"precision"})," (optional) - Number of decimal places when returning GB. Default: ",(0,o.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"number"})," - Used memory in GB or bytes"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import { getUsedMemory } from 'system-resource-monitor';\n\n// Get used memory in GB\nconsole.log(`Used Memory: ${getUsedMemory(true)}GB`);\n\n// Get used memory in bytes\nconsole.log(`Used Memory: ${getUsedMemory()} bytes`);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"memory-usage",children:"Memory Usage"}),"\n",(0,o.jsx)(n.h3,{id:"getmemoryusage",children:(0,o.jsx)(n.code,{children:"getMemoryUsage()"})}),"\n",(0,o.jsx)(n.p,{children:"Returns the current memory usage as a percentage or decimal."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function getMemoryUsage(\n  inPercent?: boolean,\n  precision?: number\n): number\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"inPercent"})," (optional) - If true, returns percentage (0-100). If false, returns decimal (0-1). Default: ",(0,o.jsx)(n.code,{children:"false"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"precision"})," (optional) - Number of decimal places in result. Default: ",(0,o.jsx)(n.code,{children:"5"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"number"})," - Memory usage value"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import { getMemoryUsage } from 'system-resource-monitor';\n\n// Get memory usage as percentage\nconsole.log(`Memory Usage: ${getMemoryUsage(true)}%`);\n\n// Get memory usage as decimal\nconsole.log(`Memory Usage: ${getMemoryUsage()}`);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"memory-thresholds",children:"Memory Thresholds"}),"\n",(0,o.jsx)(n.h3,{id:"ismemoryabove",children:(0,o.jsx)(n.code,{children:"isMemoryAbove()"})}),"\n",(0,o.jsx)(n.p,{children:"Checks if memory usage is above a specified threshold."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function isMemoryAbove(\n  threshold?: number\n): boolean\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"threshold"})," (optional) - Percentage threshold to check against (0-100). Default: ",(0,o.jsx)(n.code,{children:"50"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"boolean"})," - True if memory usage is above threshold"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"ismemorybelow",children:(0,o.jsx)(n.code,{children:"isMemoryBelow()"})}),"\n",(0,o.jsx)(n.p,{children:"Checks if memory usage is below a specified threshold."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"function isMemoryBelow(\n  threshold?: number\n): boolean\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"threshold"})," (optional) - Percentage threshold to check against (0-100). Default: ",(0,o.jsx)(n.code,{children:"50"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"boolean"})," - True if memory usage is below threshold"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"import { isMemoryAbove, isMemoryBelow } from 'system-resource-monitor';\n\n// Check for high memory usage\nif (isMemoryAbove(90)) {\n  console.log('Warning: High memory usage!');\n}\n\n// Check for low memory usage\nif (isMemoryBelow(10)) {\n  console.log('System has plenty of free memory');\n}\n"})}),"\n",(0,o.jsxs)(n.admonition,{title:"Implementation Note",type:"info",children:[(0,o.jsxs)(n.p,{children:["Memory functions use Node.js's built-in ",(0,o.jsx)(n.code,{children:"os"})," module:"]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Total memory: ",(0,o.jsx)(n.code,{children:"os.totalmem()"})]}),"\n",(0,o.jsxs)(n.li,{children:["Free memory: ",(0,o.jsx)(n.code,{children:"os.freemem()"})]}),"\n",(0,o.jsxs)(n.li,{children:["Used memory: ",(0,o.jsx)(n.code,{children:"total - free"})]}),"\n"]}),(0,o.jsx)(n.p,{children:"These calls are synchronous and provide immediate results, unlike CPU monitoring which requires sampling intervals."})]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},3331:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>t});var s=r(8101);const o={},i=s.createContext(o);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);