"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3564],{3331:(e,o,r)=>{r.d(o,{R:()=>a,x:()=>c});var s=r(8101);const t={},n=s.createContext(t);function a(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(n.Provider,{value:o},e.children)}},8792:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"examples/cross-platform","title":"Cross-Platform Detection","description":"","source":"@site/docs/examples/cross-platform.md","sourceDirName":"examples","slug":"/examples/cross-platform","permalink":"/system-resource-monitor/docs/examples/cross-platform","draft":false,"unlisted":false,"editUrl":"https://github.com/pfaciana/system-resource-monitor/tree/master/docs/docs/examples/cross-platform.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Memory Alerts","permalink":"/system-resource-monitor/docs/examples/memory-alerts"}}');var t=r(5105),n=r(3331);const a={sidebar_position:4},c="Cross-Platform Detection",l={},i=[];function m(e){const o={code:"code",h1:"h1",header:"header",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"cross-platform-detection",children:"Cross-Platform Detection"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-javascript",children:"import {\n  getPlatform,\n  getPhysicalCoreCount,\n  getLogicalCoreCount\n} from 'system-resource-monitor';\n\nfunction analyzeCoreConfiguration() {\n  const physicalCores = getPhysicalCoreCount();\n  const logicalCores = getLogicalCoreCount();\n  const platform = getPlatform();\n\n  console.log(`Platform: ${platform}`);\n  console.log(`Physical Cores: ${physicalCores}`);\n  console.log(`Logical Cores: ${logicalCores}`);\n\n  // Check for hyperthreading\n  if (logicalCores > physicalCores) {\n    console.log('Hyperthreading is enabled');\n    console.log(`Threads per core: ${logicalCores / physicalCores}`);\n  }\n}\n\nanalyzeCoreConfiguration()\n"})})]})}function p(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}}}]);